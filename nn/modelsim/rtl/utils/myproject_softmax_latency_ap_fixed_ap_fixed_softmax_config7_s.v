// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.1 (64-bit)
// Version: 2022.1.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module myproject_softmax_latency_ap_fixed_ap_fixed_softmax_config7_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        layer7_out_address0,
        layer7_out_ce0,
        layer7_out_we0,
        layer7_out_d0,
        layer7_out_address1,
        layer7_out_ce1,
        layer7_out_we1,
        layer7_out_d1
);

parameter    ap_ST_fsm_pp0_stage0 = 5'd1;
parameter    ap_ST_fsm_pp0_stage1 = 5'd2;
parameter    ap_ST_fsm_pp0_stage2 = 5'd4;
parameter    ap_ST_fsm_pp0_stage3 = 5'd8;
parameter    ap_ST_fsm_pp0_stage4 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [13:0] p_read;
input  [13:0] p_read1;
input  [13:0] p_read2;
input  [13:0] p_read3;
input  [13:0] p_read4;
input  [13:0] p_read5;
input  [13:0] p_read6;
input  [13:0] p_read7;
input  [13:0] p_read8;
input  [13:0] p_read9;
output  [3:0] layer7_out_address0;
output   layer7_out_ce0;
output   layer7_out_we0;
output  [15:0] layer7_out_d0;
output  [3:0] layer7_out_address1;
output   layer7_out_ce1;
output   layer7_out_we1;
output  [15:0] layer7_out_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] layer7_out_address0;
reg layer7_out_ce0;
reg layer7_out_we0;
reg[15:0] layer7_out_d0;
reg[3:0] layer7_out_address1;
reg layer7_out_ce1;
reg layer7_out_we1;
reg[15:0] layer7_out_d1;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state10_pp0_stage4_iter1;
wire    ap_block_state15_pp0_stage4_iter2;
wire    ap_block_state20_pp0_stage4_iter3;
wire    ap_block_pp0_stage4_subdone;
reg   [9:0] exp_table_address0;
reg    exp_table_ce0;
wire   [16:0] exp_table_q0;
reg   [9:0] exp_table_address1;
reg    exp_table_ce1;
wire   [16:0] exp_table_q1;
wire   [9:0] invert_table_address0;
reg    invert_table_ce0;
wire   [17:0] invert_table_q0;
reg   [7:0] p_Result_s_reg_1285;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state11_pp0_stage0_iter2;
wire    ap_block_state16_pp0_stage0_iter3;
wire    ap_block_state21_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
reg   [7:0] p_Result_1_reg_1290;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_state12_pp0_stage1_iter2;
wire    ap_block_state17_pp0_stage1_iter3;
wire    ap_block_state22_pp0_stage1_iter4;
wire    ap_block_pp0_stage1_11001;
reg   [7:0] p_Result_2_reg_1305;
reg   [7:0] p_Result_3_reg_1310;
reg   [16:0] exp_res_V_reg_1315;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state8_pp0_stage2_iter1;
wire    ap_block_state13_pp0_stage2_iter2;
wire    ap_block_state18_pp0_stage2_iter3;
reg    ap_block_pp0_stage2_11001;
reg   [16:0] exp_res_V_reg_1315_pp0_iter1_reg;
reg   [16:0] exp_res_V_reg_1315_pp0_iter2_reg;
reg   [16:0] exp_res_V_10_reg_1321;
reg   [16:0] exp_res_V_10_reg_1321_pp0_iter1_reg;
reg   [16:0] exp_res_V_10_reg_1321_pp0_iter2_reg;
reg   [7:0] p_Result_4_reg_1337;
reg   [7:0] p_Result_5_reg_1342;
reg   [16:0] exp_res_V_11_reg_1347;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state9_pp0_stage3_iter1;
wire    ap_block_state14_pp0_stage3_iter2;
wire    ap_block_state19_pp0_stage3_iter3;
wire    ap_block_pp0_stage3_11001;
reg   [16:0] exp_res_V_11_reg_1347_pp0_iter1_reg;
reg   [16:0] exp_res_V_11_reg_1347_pp0_iter2_reg;
reg   [16:0] exp_res_V_12_reg_1353;
reg   [16:0] exp_res_V_12_reg_1353_pp0_iter1_reg;
reg   [16:0] exp_res_V_12_reg_1353_pp0_iter2_reg;
reg   [7:0] p_Result_6_reg_1369;
reg   [7:0] p_Result_7_reg_1374;
reg   [16:0] exp_res_V_13_reg_1379;
wire    ap_block_pp0_stage4_11001;
reg   [16:0] exp_res_V_13_reg_1379_pp0_iter1_reg;
reg   [16:0] exp_res_V_13_reg_1379_pp0_iter2_reg;
reg   [16:0] exp_res_V_14_reg_1385;
reg   [16:0] exp_res_V_14_reg_1385_pp0_iter1_reg;
reg   [16:0] exp_res_V_14_reg_1385_pp0_iter2_reg;
reg   [7:0] p_Result_8_reg_1401;
reg   [7:0] p_Result_9_reg_1406;
reg   [16:0] exp_res_V_15_reg_1411;
reg   [16:0] exp_res_V_15_reg_1411_pp0_iter2_reg;
reg   [16:0] exp_res_V_15_reg_1411_pp0_iter3_reg;
reg   [16:0] exp_res_V_16_reg_1417;
reg   [16:0] exp_res_V_16_reg_1417_pp0_iter2_reg;
reg   [16:0] exp_res_V_16_reg_1417_pp0_iter3_reg;
wire  signed [17:0] lhs_2_fu_579_p3;
reg  signed [17:0] lhs_2_reg_1433;
wire  signed [17:0] rhs_2_fu_617_p3;
reg  signed [17:0] rhs_2_reg_1439;
reg   [16:0] exp_res_V_17_reg_1445;
reg   [16:0] exp_res_V_17_reg_1445_pp0_iter2_reg;
reg   [16:0] exp_res_V_17_reg_1445_pp0_iter3_reg;
reg   [16:0] exp_res_V_18_reg_1452;
reg   [16:0] exp_res_V_18_reg_1452_pp0_iter2_reg;
reg   [16:0] exp_res_V_18_reg_1452_pp0_iter3_reg;
wire   [17:0] p_Val2_3_fu_637_p2;
reg   [17:0] p_Val2_3_reg_1459;
reg   [0:0] p_Result_26_reg_1465;
reg   [0:0] p_Result_27_reg_1472;
wire  signed [17:0] lhs_5_fu_699_p3;
reg  signed [17:0] lhs_5_reg_1479;
wire  signed [17:0] rhs_5_fu_737_p3;
reg  signed [17:0] rhs_5_reg_1485;
wire  signed [17:0] lhs_6_fu_795_p3;
reg  signed [17:0] lhs_6_reg_1491;
wire   [17:0] p_Val2_7_fu_815_p2;
reg   [17:0] p_Val2_7_reg_1497;
wire   [0:0] p_Result_30_fu_819_p3;
reg   [0:0] p_Result_30_reg_1502;
wire   [0:0] p_Result_31_fu_827_p3;
reg   [0:0] p_Result_31_reg_1507;
wire   [0:0] xor_ln348_5_fu_847_p2;
reg   [0:0] xor_ln348_5_reg_1512;
wire   [17:0] select_ln396_1_fu_853_p3;
reg   [17:0] select_ln396_1_reg_1518;
wire   [17:0] p_Val2_9_fu_914_p2;
reg   [17:0] p_Val2_9_reg_1523;
reg   [0:0] p_Result_32_reg_1528;
reg   [0:0] p_Result_33_reg_1534;
wire   [16:0] rhs_7_fu_953_p3;
reg   [16:0] rhs_7_reg_1540;
reg   [0:0] p_Result_35_reg_1546;
reg   [0:0] p_Result_36_reg_1553;
reg   [9:0] tmp_reg_1560;
wire   [9:0] p_Result_23_fu_1088_p3;
reg   [9:0] p_Result_23_reg_1566;
reg   [17:0] inv_exp_sum_V_reg_1576;
wire  signed [27:0] sext_ln1319_fu_1100_p1;
reg  signed [27:0] sext_ln1319_reg_1581;
reg   [15:0] trunc_ln_reg_1625;
reg   [15:0] trunc_ln864_1_reg_1630;
reg   [15:0] trunc_ln864_2_reg_1645;
reg   [15:0] trunc_ln864_3_reg_1650;
reg   [15:0] trunc_ln864_4_reg_1665;
reg   [15:0] trunc_ln864_5_reg_1670;
reg   [15:0] trunc_ln864_6_reg_1675;
reg   [15:0] trunc_ln864_7_reg_1680;
reg   [15:0] trunc_ln864_8_reg_1685;
reg   [15:0] trunc_ln864_9_reg_1690;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage1_subdone;
wire   [63:0] zext_ln251_fu_380_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln251_1_fu_388_p1;
wire   [63:0] zext_ln251_2_fu_416_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln251_3_fu_424_p1;
wire   [63:0] zext_ln251_4_fu_452_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln251_5_fu_460_p1;
wire   [63:0] zext_ln251_6_fu_488_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln251_7_fu_496_p1;
wire   [63:0] zext_ln251_8_fu_524_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln251_9_fu_532_p1;
wire   [63:0] zext_ln259_fu_1096_p1;
wire  signed [9:0] sext_ln251_fu_377_p1;
wire  signed [9:0] sext_ln251_1_fu_385_p1;
wire  signed [9:0] sext_ln251_2_fu_413_p1;
wire  signed [9:0] sext_ln251_3_fu_421_p1;
wire  signed [9:0] sext_ln251_4_fu_449_p1;
wire  signed [9:0] sext_ln251_5_fu_457_p1;
wire  signed [9:0] sext_ln251_6_fu_485_p1;
wire  signed [9:0] sext_ln251_7_fu_493_p1;
wire  signed [9:0] sext_ln251_8_fu_521_p1;
wire  signed [9:0] sext_ln251_9_fu_529_p1;
wire   [17:0] zext_ln53_2_fu_543_p1;
wire   [17:0] zext_ln53_3_fu_546_p1;
wire   [17:0] p_Val2_s_fu_549_p2;
wire   [0:0] tmp_2_fu_563_p3;
wire   [0:0] p_Result_24_fu_555_p3;
wire   [17:0] select_ln392_1_fu_571_p3;
wire   [17:0] zext_ln53_fu_537_p1;
wire   [17:0] zext_ln53_1_fu_540_p1;
wire   [17:0] p_Val2_1_fu_587_p2;
wire   [0:0] tmp_4_fu_601_p3;
wire   [0:0] p_Result_25_fu_593_p3;
wire   [17:0] select_ln392_2_fu_609_p3;
wire  signed [18:0] sext_ln859_4_fu_628_p1;
wire  signed [18:0] sext_ln859_3_fu_625_p1;
wire   [18:0] ret_V_fu_631_p2;
wire   [17:0] zext_ln53_6_fu_663_p1;
wire   [17:0] zext_ln53_7_fu_666_p1;
wire   [17:0] p_Val2_4_fu_669_p2;
wire   [0:0] tmp_8_fu_683_p3;
wire   [0:0] p_Result_28_fu_675_p3;
wire   [17:0] select_ln392_3_fu_691_p3;
wire   [17:0] zext_ln53_4_fu_657_p1;
wire   [17:0] zext_ln53_5_fu_660_p1;
wire   [17:0] p_Val2_5_fu_707_p2;
wire   [0:0] tmp_10_fu_721_p3;
wire   [0:0] p_Result_29_fu_713_p3;
wire   [17:0] select_ln392_4_fu_729_p3;
wire   [0:0] xor_ln941_2_fu_745_p2;
wire   [0:0] xor_ln942_1_fu_755_p2;
wire   [0:0] xor_ln348_3_fu_765_p2;
wire   [0:0] overflow_3_fu_750_p2;
wire   [0:0] xor_ln348_4_fu_769_p2;
wire   [0:0] underflow_1_fu_760_p2;
wire   [0:0] or_ln348_1_fu_775_p2;
wire   [17:0] select_ln348_fu_781_p3;
wire   [17:0] select_ln396_fu_788_p3;
wire  signed [18:0] sext_ln859_6_fu_806_p1;
wire  signed [18:0] sext_ln859_5_fu_803_p1;
wire   [18:0] ret_V_1_fu_809_p2;
wire   [0:0] xor_ln942_2_fu_835_p2;
wire   [0:0] underflow_2_fu_841_p2;
wire   [0:0] xor_ln941_3_fu_867_p2;
wire   [0:0] overflow_6_fu_872_p2;
wire   [0:0] xor_ln348_6_fu_877_p2;
wire   [0:0] or_ln348_2_fu_882_p2;
wire   [17:0] select_ln348_5_fu_888_p3;
wire  signed [17:0] rhs_6_fu_894_p3;
wire  signed [18:0] sext_ln859_fu_901_p1;
wire  signed [18:0] sext_ln859_1_fu_904_p1;
wire   [18:0] ret_V_2_fu_908_p2;
wire   [17:0] exp_res_V_9_cast2_fu_864_p1;
wire   [17:0] exp_res_V_8_cast1_fu_861_p1;
wire   [17:0] p_Val2_10_fu_935_p2;
wire   [0:0] p_Result_34_fu_945_p3;
wire   [16:0] add_ln902_fu_941_p2;
wire   [0:0] xor_ln941_fu_961_p2;
wire   [0:0] overflow_fu_966_p2;
wire   [0:0] xor_ln348_fu_971_p2;
wire   [17:0] select_ln392_fu_975_p3;
wire  signed [17:0] lhs_7_fu_983_p3;
wire  signed [18:0] sext_ln859_2_fu_993_p1;
wire   [18:0] zext_ln859_1_fu_997_p1;
wire   [17:0] zext_ln859_fu_990_p1;
wire   [18:0] ret_V_3_fu_1000_p2;
wire   [17:0] p_Val2_12_fu_1006_p2;
wire   [0:0] xor_ln941_1_fu_1038_p2;
wire   [0:0] xor_ln942_fu_1048_p2;
wire   [0:0] xor_ln348_1_fu_1058_p2;
wire   [0:0] overflow_8_fu_1043_p2;
wire   [0:0] xor_ln348_2_fu_1062_p2;
wire   [0:0] underflow_fu_1053_p2;
wire   [0:0] or_ln348_fu_1068_p2;
wire   [9:0] select_ln348_8_fu_1074_p3;
wire   [9:0] select_ln396_2_fu_1081_p3;
wire  signed [27:0] grp_fu_1223_p2;
wire  signed [27:0] grp_fu_1230_p2;
wire  signed [27:0] grp_fu_1237_p2;
wire  signed [27:0] grp_fu_1243_p2;
wire  signed [27:0] grp_fu_1249_p2;
wire  signed [27:0] grp_fu_1255_p2;
wire  signed [27:0] grp_fu_1261_p2;
wire  signed [27:0] grp_fu_1267_p2;
wire  signed [27:0] grp_fu_1273_p2;
wire  signed [27:0] grp_fu_1279_p2;
wire  signed [17:0] grp_fu_1223_p0;
wire   [16:0] grp_fu_1223_p1;
wire  signed [17:0] grp_fu_1230_p0;
wire   [16:0] grp_fu_1230_p1;
wire  signed [17:0] grp_fu_1237_p0;
wire   [16:0] grp_fu_1237_p1;
wire  signed [17:0] grp_fu_1243_p0;
wire   [16:0] grp_fu_1243_p1;
wire  signed [17:0] grp_fu_1249_p0;
wire   [16:0] grp_fu_1249_p1;
wire  signed [17:0] grp_fu_1255_p0;
wire   [16:0] grp_fu_1255_p1;
wire  signed [17:0] grp_fu_1261_p0;
wire   [16:0] grp_fu_1261_p1;
wire  signed [17:0] grp_fu_1267_p0;
wire   [16:0] grp_fu_1267_p1;
wire  signed [17:0] grp_fu_1273_p0;
wire   [16:0] grp_fu_1273_p1;
wire  signed [17:0] grp_fu_1279_p0;
wire   [16:0] grp_fu_1279_p1;
reg    grp_fu_1223_ce;
reg    grp_fu_1230_ce;
reg    grp_fu_1237_ce;
reg    grp_fu_1243_ce;
reg    grp_fu_1249_ce;
reg    grp_fu_1255_ce;
reg    grp_fu_1261_ce;
reg    grp_fu_1267_ce;
reg    grp_fu_1273_ce;
reg    grp_fu_1279_ce;
reg   [4:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to4;
reg    ap_idle_pp0_0to3;
reg    ap_reset_idle_pp0;
reg    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_enable_pp0;
wire   [27:0] grp_fu_1223_p10;
wire   [27:0] grp_fu_1230_p10;
wire   [27:0] grp_fu_1237_p10;
wire   [27:0] grp_fu_1243_p10;
wire   [27:0] grp_fu_1249_p10;
wire   [27:0] grp_fu_1255_p10;
wire   [27:0] grp_fu_1261_p10;
wire   [27:0] grp_fu_1267_p10;
wire   [27:0] grp_fu_1273_p10;
wire   [27:0] grp_fu_1279_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
end

myproject_softmax_latency_ap_fixed_ap_fixed_softmax_config7_s_exp_tfYi #(
    .DataWidth( 17 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
exp_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_table_address0),
    .ce0(exp_table_ce0),
    .q0(exp_table_q0),
    .address1(exp_table_address1),
    .ce1(exp_table_ce1),
    .q1(exp_table_q1)
);

myproject_softmax_latency_ap_fixed_ap_fixed_softmax_config7_s_inverg8j #(
    .DataWidth( 18 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
invert_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(invert_table_address0),
    .ce0(invert_table_ce0),
    .q0(invert_table_q0)
);

myproject_mul_mul_18s_17ns_28_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 28 ))
mul_mul_18s_17ns_28_4_1_U118(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1223_p0),
    .din1(grp_fu_1223_p1),
    .ce(grp_fu_1223_ce),
    .dout(grp_fu_1223_p2)
);

myproject_mul_mul_18s_17ns_28_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 28 ))
mul_mul_18s_17ns_28_4_1_U119(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1230_p0),
    .din1(grp_fu_1230_p1),
    .ce(grp_fu_1230_ce),
    .dout(grp_fu_1230_p2)
);

myproject_mul_mul_18s_17ns_28_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 28 ))
mul_mul_18s_17ns_28_4_1_U120(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1237_p0),
    .din1(grp_fu_1237_p1),
    .ce(grp_fu_1237_ce),
    .dout(grp_fu_1237_p2)
);

myproject_mul_mul_18s_17ns_28_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 28 ))
mul_mul_18s_17ns_28_4_1_U121(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1243_p0),
    .din1(grp_fu_1243_p1),
    .ce(grp_fu_1243_ce),
    .dout(grp_fu_1243_p2)
);

myproject_mul_mul_18s_17ns_28_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 28 ))
mul_mul_18s_17ns_28_4_1_U122(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1249_p0),
    .din1(grp_fu_1249_p1),
    .ce(grp_fu_1249_ce),
    .dout(grp_fu_1249_p2)
);

myproject_mul_mul_18s_17ns_28_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 28 ))
mul_mul_18s_17ns_28_4_1_U123(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1255_p0),
    .din1(grp_fu_1255_p1),
    .ce(grp_fu_1255_ce),
    .dout(grp_fu_1255_p2)
);

myproject_mul_mul_18s_17ns_28_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 28 ))
mul_mul_18s_17ns_28_4_1_U124(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1261_p0),
    .din1(grp_fu_1261_p1),
    .ce(grp_fu_1261_ce),
    .dout(grp_fu_1261_p2)
);

myproject_mul_mul_18s_17ns_28_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 28 ))
mul_mul_18s_17ns_28_4_1_U125(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1267_p0),
    .din1(grp_fu_1267_p1),
    .ce(grp_fu_1267_ce),
    .dout(grp_fu_1267_p2)
);

myproject_mul_mul_18s_17ns_28_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 28 ))
mul_mul_18s_17ns_28_4_1_U126(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1273_p0),
    .din1(grp_fu_1273_p1),
    .ce(grp_fu_1273_ce),
    .dout(grp_fu_1273_p2)
);

myproject_mul_mul_18s_17ns_28_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 28 ))
mul_mul_18s_17ns_28_4_1_U127(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1279_p0),
    .din1(grp_fu_1279_p1),
    .ce(grp_fu_1279_ce),
    .dout(grp_fu_1279_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        exp_res_V_10_reg_1321 <= exp_table_q0;
        exp_res_V_reg_1315 <= exp_table_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        exp_res_V_10_reg_1321_pp0_iter1_reg <= exp_res_V_10_reg_1321;
        exp_res_V_10_reg_1321_pp0_iter2_reg <= exp_res_V_10_reg_1321_pp0_iter1_reg;
        exp_res_V_reg_1315_pp0_iter1_reg <= exp_res_V_reg_1315;
        exp_res_V_reg_1315_pp0_iter2_reg <= exp_res_V_reg_1315_pp0_iter1_reg;
        inv_exp_sum_V_reg_1576 <= invert_table_q0;
        lhs_6_reg_1491 <= lhs_6_fu_795_p3;
        p_Result_30_reg_1502 <= ret_V_1_fu_809_p2[32'd18];
        p_Result_31_reg_1507 <= p_Val2_7_fu_815_p2[32'd17];
        p_Result_4_reg_1337 <= {{p_read4[13:6]}};
        p_Result_5_reg_1342 <= {{p_read5[13:6]}};
        p_Val2_7_reg_1497 <= p_Val2_7_fu_815_p2;
        select_ln396_1_reg_1518 <= select_ln396_1_fu_853_p3;
        trunc_ln864_2_reg_1645 <= {{grp_fu_1237_p2[27:12]}};
        trunc_ln864_3_reg_1650 <= {{grp_fu_1243_p2[27:12]}};
        xor_ln348_5_reg_1512 <= xor_ln348_5_fu_847_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        exp_res_V_11_reg_1347 <= exp_table_q1;
        exp_res_V_12_reg_1353 <= exp_table_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        exp_res_V_11_reg_1347_pp0_iter1_reg <= exp_res_V_11_reg_1347;
        exp_res_V_11_reg_1347_pp0_iter2_reg <= exp_res_V_11_reg_1347_pp0_iter1_reg;
        exp_res_V_12_reg_1353_pp0_iter1_reg <= exp_res_V_12_reg_1353;
        exp_res_V_12_reg_1353_pp0_iter2_reg <= exp_res_V_12_reg_1353_pp0_iter1_reg;
        p_Result_32_reg_1528 <= ret_V_2_fu_908_p2[32'd18];
        p_Result_33_reg_1534 <= p_Val2_9_fu_914_p2[32'd17];
        p_Result_6_reg_1369 <= {{p_read6[13:6]}};
        p_Result_7_reg_1374 <= {{p_read7[13:6]}};
        p_Val2_9_reg_1523 <= p_Val2_9_fu_914_p2;
        rhs_7_reg_1540 <= rhs_7_fu_953_p3;
        sext_ln1319_reg_1581 <= sext_ln1319_fu_1100_p1;
        trunc_ln864_4_reg_1665 <= {{grp_fu_1249_p2[27:12]}};
        trunc_ln864_5_reg_1670 <= {{grp_fu_1255_p2[27:12]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        exp_res_V_13_reg_1379 <= exp_table_q1;
        exp_res_V_14_reg_1385 <= exp_table_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        exp_res_V_13_reg_1379_pp0_iter1_reg <= exp_res_V_13_reg_1379;
        exp_res_V_13_reg_1379_pp0_iter2_reg <= exp_res_V_13_reg_1379_pp0_iter1_reg;
        exp_res_V_14_reg_1385_pp0_iter1_reg <= exp_res_V_14_reg_1385;
        exp_res_V_14_reg_1385_pp0_iter2_reg <= exp_res_V_14_reg_1385_pp0_iter1_reg;
        p_Result_35_reg_1546 <= ret_V_3_fu_1000_p2[32'd18];
        p_Result_36_reg_1553 <= p_Val2_12_fu_1006_p2[32'd17];
        p_Result_8_reg_1401 <= {{p_read8[13:6]}};
        p_Result_9_reg_1406 <= {{p_read9[13:6]}};
        tmp_reg_1560 <= {{p_Val2_12_fu_1006_p2[17:8]}};
        trunc_ln864_6_reg_1675 <= {{grp_fu_1261_p2[27:12]}};
        trunc_ln864_7_reg_1680 <= {{grp_fu_1267_p2[27:12]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_res_V_15_reg_1411 <= exp_table_q1;
        exp_res_V_16_reg_1417 <= exp_table_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_res_V_15_reg_1411_pp0_iter2_reg <= exp_res_V_15_reg_1411;
        exp_res_V_15_reg_1411_pp0_iter3_reg <= exp_res_V_15_reg_1411_pp0_iter2_reg;
        exp_res_V_16_reg_1417_pp0_iter2_reg <= exp_res_V_16_reg_1417;
        exp_res_V_16_reg_1417_pp0_iter3_reg <= exp_res_V_16_reg_1417_pp0_iter2_reg;
        lhs_2_reg_1433 <= lhs_2_fu_579_p3;
        p_Result_1_reg_1290 <= {{p_read1[13:6]}};
        p_Result_23_reg_1566 <= p_Result_23_fu_1088_p3;
        p_Result_s_reg_1285 <= {{p_read[13:6]}};
        rhs_2_reg_1439 <= rhs_2_fu_617_p3;
        trunc_ln864_8_reg_1685 <= {{grp_fu_1273_p2[27:12]}};
        trunc_ln864_9_reg_1690 <= {{grp_fu_1279_p2[27:12]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        exp_res_V_17_reg_1445 <= exp_table_q1;
        exp_res_V_18_reg_1452 <= exp_table_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        exp_res_V_17_reg_1445_pp0_iter2_reg <= exp_res_V_17_reg_1445;
        exp_res_V_17_reg_1445_pp0_iter3_reg <= exp_res_V_17_reg_1445_pp0_iter2_reg;
        exp_res_V_18_reg_1452_pp0_iter2_reg <= exp_res_V_18_reg_1452;
        exp_res_V_18_reg_1452_pp0_iter3_reg <= exp_res_V_18_reg_1452_pp0_iter2_reg;
        lhs_5_reg_1479 <= lhs_5_fu_699_p3;
        p_Result_26_reg_1465 <= ret_V_fu_631_p2[32'd18];
        p_Result_27_reg_1472 <= p_Val2_3_fu_637_p2[32'd17];
        p_Result_2_reg_1305 <= {{p_read2[13:6]}};
        p_Result_3_reg_1310 <= {{p_read3[13:6]}};
        p_Val2_3_reg_1459 <= p_Val2_3_fu_637_p2;
        rhs_5_reg_1485 <= rhs_5_fu_737_p3;
        trunc_ln864_1_reg_1630 <= {{grp_fu_1230_p2[27:12]}};
        trunc_ln_reg_1625 <= {{grp_fu_1223_p2[27:12]}};
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to3 = 1'b1;
    end else begin
        ap_idle_pp0_0to3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to4 = 1'b1;
    end else begin
        ap_idle_pp0_1to4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to3 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table_address0 = zext_ln251_9_fu_532_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        exp_table_address0 = zext_ln251_7_fu_496_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        exp_table_address0 = zext_ln251_5_fu_460_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        exp_table_address0 = zext_ln251_3_fu_424_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        exp_table_address0 = zext_ln251_1_fu_388_p1;
    end else begin
        exp_table_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table_address1 = zext_ln251_8_fu_524_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        exp_table_address1 = zext_ln251_6_fu_488_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        exp_table_address1 = zext_ln251_4_fu_452_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        exp_table_address1 = zext_ln251_2_fu_416_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        exp_table_address1 = zext_ln251_fu_380_p1;
    end else begin
        exp_table_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        exp_table_ce0 = 1'b1;
    end else begin
        exp_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        exp_table_ce1 = 1'b1;
    end else begin
        exp_table_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_1223_ce = 1'b1;
    end else begin
        grp_fu_1223_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_1230_ce = 1'b1;
    end else begin
        grp_fu_1230_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_1237_ce = 1'b1;
    end else begin
        grp_fu_1237_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_1243_ce = 1'b1;
    end else begin
        grp_fu_1243_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_1249_ce = 1'b1;
    end else begin
        grp_fu_1249_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_1255_ce = 1'b1;
    end else begin
        grp_fu_1255_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_1261_ce = 1'b1;
    end else begin
        grp_fu_1261_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_1267_ce = 1'b1;
    end else begin
        grp_fu_1267_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_1273_ce = 1'b1;
    end else begin
        grp_fu_1273_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_1279_ce = 1'b1;
    end else begin
        grp_fu_1279_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        invert_table_ce0 = 1'b1;
    end else begin
        invert_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        layer7_out_address0 = 64'd9;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer7_out_address0 = 64'd7;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        layer7_out_address0 = 64'd5;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        layer7_out_address0 = 64'd3;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        layer7_out_address0 = 64'd1;
    end else begin
        layer7_out_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        layer7_out_address1 = 64'd8;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer7_out_address1 = 64'd6;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        layer7_out_address1 = 64'd4;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        layer7_out_address1 = 64'd2;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        layer7_out_address1 = 64'd0;
    end else begin
        layer7_out_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        layer7_out_ce0 = 1'b1;
    end else begin
        layer7_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        layer7_out_ce1 = 1'b1;
    end else begin
        layer7_out_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        layer7_out_d0 = trunc_ln864_9_reg_1690;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer7_out_d0 = trunc_ln864_7_reg_1680;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        layer7_out_d0 = trunc_ln864_5_reg_1670;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        layer7_out_d0 = trunc_ln864_3_reg_1650;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        layer7_out_d0 = trunc_ln864_1_reg_1630;
    end else begin
        layer7_out_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        layer7_out_d1 = trunc_ln864_8_reg_1685;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layer7_out_d1 = trunc_ln864_6_reg_1675;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        layer7_out_d1 = trunc_ln864_4_reg_1665;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        layer7_out_d1 = trunc_ln864_2_reg_1645;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        layer7_out_d1 = trunc_ln_reg_1625;
    end else begin
        layer7_out_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        layer7_out_we0 = 1'b1;
    end else begin
        layer7_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        layer7_out_we1 = 1'b1;
    end else begin
        layer7_out_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start == 1'b0) & (ap_idle_pp0_1to4 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_reset_idle_pp0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln902_fu_941_p2 = (exp_res_V_18_reg_1452 + exp_res_V_17_reg_1445);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_done_reg == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (ap_done_reg == 1'b1);
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

assign ap_block_state20_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign exp_res_V_8_cast1_fu_861_p1 = exp_res_V_17_reg_1445;

assign exp_res_V_9_cast2_fu_864_p1 = exp_res_V_18_reg_1452;

assign grp_fu_1223_p0 = sext_ln1319_fu_1100_p1;

assign grp_fu_1223_p1 = grp_fu_1223_p10;

assign grp_fu_1223_p10 = exp_res_V_reg_1315_pp0_iter2_reg;

assign grp_fu_1230_p0 = sext_ln1319_fu_1100_p1;

assign grp_fu_1230_p1 = grp_fu_1230_p10;

assign grp_fu_1230_p10 = exp_res_V_10_reg_1321_pp0_iter2_reg;

assign grp_fu_1237_p0 = sext_ln1319_reg_1581;

assign grp_fu_1237_p1 = grp_fu_1237_p10;

assign grp_fu_1237_p10 = exp_res_V_11_reg_1347_pp0_iter2_reg;

assign grp_fu_1243_p0 = sext_ln1319_reg_1581;

assign grp_fu_1243_p1 = grp_fu_1243_p10;

assign grp_fu_1243_p10 = exp_res_V_12_reg_1353_pp0_iter2_reg;

assign grp_fu_1249_p0 = sext_ln1319_reg_1581;

assign grp_fu_1249_p1 = grp_fu_1249_p10;

assign grp_fu_1249_p10 = exp_res_V_13_reg_1379_pp0_iter2_reg;

assign grp_fu_1255_p0 = sext_ln1319_reg_1581;

assign grp_fu_1255_p1 = grp_fu_1255_p10;

assign grp_fu_1255_p10 = exp_res_V_14_reg_1385_pp0_iter2_reg;

assign grp_fu_1261_p0 = sext_ln1319_reg_1581;

assign grp_fu_1261_p1 = grp_fu_1261_p10;

assign grp_fu_1261_p10 = exp_res_V_15_reg_1411_pp0_iter3_reg;

assign grp_fu_1267_p0 = sext_ln1319_reg_1581;

assign grp_fu_1267_p1 = grp_fu_1267_p10;

assign grp_fu_1267_p10 = exp_res_V_16_reg_1417_pp0_iter3_reg;

assign grp_fu_1273_p0 = sext_ln1319_reg_1581;

assign grp_fu_1273_p1 = grp_fu_1273_p10;

assign grp_fu_1273_p10 = exp_res_V_17_reg_1445_pp0_iter3_reg;

assign grp_fu_1279_p0 = sext_ln1319_reg_1581;

assign grp_fu_1279_p1 = grp_fu_1279_p10;

assign grp_fu_1279_p10 = exp_res_V_18_reg_1452_pp0_iter3_reg;

assign invert_table_address0 = zext_ln259_fu_1096_p1;

assign lhs_2_fu_579_p3 = ((p_Result_24_fu_555_p3[0:0] == 1'b1) ? select_ln392_1_fu_571_p3 : p_Val2_s_fu_549_p2);

assign lhs_5_fu_699_p3 = ((p_Result_28_fu_675_p3[0:0] == 1'b1) ? select_ln392_3_fu_691_p3 : p_Val2_4_fu_669_p2);

assign lhs_6_fu_795_p3 = ((or_ln348_1_fu_775_p2[0:0] == 1'b1) ? select_ln348_fu_781_p3 : select_ln396_fu_788_p3);

assign lhs_7_fu_983_p3 = ((xor_ln348_fu_971_p2[0:0] == 1'b1) ? select_ln392_fu_975_p3 : p_Val2_9_reg_1523);

assign or_ln348_1_fu_775_p2 = (xor_ln348_4_fu_769_p2 | overflow_3_fu_750_p2);

assign or_ln348_2_fu_882_p2 = (xor_ln348_6_fu_877_p2 | overflow_6_fu_872_p2);

assign or_ln348_fu_1068_p2 = (xor_ln348_2_fu_1062_p2 | overflow_8_fu_1043_p2);

assign overflow_3_fu_750_p2 = (xor_ln941_2_fu_745_p2 & p_Result_27_reg_1472);

assign overflow_6_fu_872_p2 = (xor_ln941_3_fu_867_p2 & p_Result_31_reg_1507);

assign overflow_8_fu_1043_p2 = (xor_ln941_1_fu_1038_p2 & p_Result_36_reg_1553);

assign overflow_fu_966_p2 = (xor_ln941_fu_961_p2 & p_Result_33_reg_1534);

assign p_Result_23_fu_1088_p3 = ((or_ln348_fu_1068_p2[0:0] == 1'b1) ? select_ln348_8_fu_1074_p3 : select_ln396_2_fu_1081_p3);

assign p_Result_24_fu_555_p3 = p_Val2_s_fu_549_p2[32'd17];

assign p_Result_25_fu_593_p3 = p_Val2_1_fu_587_p2[32'd17];

assign p_Result_28_fu_675_p3 = p_Val2_4_fu_669_p2[32'd17];

assign p_Result_29_fu_713_p3 = p_Val2_5_fu_707_p2[32'd17];

assign p_Result_30_fu_819_p3 = ret_V_1_fu_809_p2[32'd18];

assign p_Result_31_fu_827_p3 = p_Val2_7_fu_815_p2[32'd17];

assign p_Result_34_fu_945_p3 = p_Val2_10_fu_935_p2[32'd17];

assign p_Val2_10_fu_935_p2 = (exp_res_V_9_cast2_fu_864_p1 + exp_res_V_8_cast1_fu_861_p1);

assign p_Val2_12_fu_1006_p2 = ($signed(lhs_7_fu_983_p3) + $signed(zext_ln859_fu_990_p1));

assign p_Val2_1_fu_587_p2 = (zext_ln53_fu_537_p1 + zext_ln53_1_fu_540_p1);

assign p_Val2_3_fu_637_p2 = ($signed(rhs_2_reg_1439) + $signed(lhs_2_reg_1433));

assign p_Val2_4_fu_669_p2 = (zext_ln53_6_fu_663_p1 + zext_ln53_7_fu_666_p1);

assign p_Val2_5_fu_707_p2 = (zext_ln53_4_fu_657_p1 + zext_ln53_5_fu_660_p1);

assign p_Val2_7_fu_815_p2 = ($signed(rhs_5_reg_1485) + $signed(lhs_5_reg_1479));

assign p_Val2_9_fu_914_p2 = ($signed(lhs_6_reg_1491) + $signed(rhs_6_fu_894_p3));

assign p_Val2_s_fu_549_p2 = (zext_ln53_2_fu_543_p1 + zext_ln53_3_fu_546_p1);

assign ret_V_1_fu_809_p2 = ($signed(sext_ln859_6_fu_806_p1) + $signed(sext_ln859_5_fu_803_p1));

assign ret_V_2_fu_908_p2 = ($signed(sext_ln859_fu_901_p1) + $signed(sext_ln859_1_fu_904_p1));

assign ret_V_3_fu_1000_p2 = ($signed(sext_ln859_2_fu_993_p1) + $signed(zext_ln859_1_fu_997_p1));

assign ret_V_fu_631_p2 = ($signed(sext_ln859_4_fu_628_p1) + $signed(sext_ln859_3_fu_625_p1));

assign rhs_2_fu_617_p3 = ((p_Result_25_fu_593_p3[0:0] == 1'b1) ? select_ln392_2_fu_609_p3 : p_Val2_1_fu_587_p2);

assign rhs_5_fu_737_p3 = ((p_Result_29_fu_713_p3[0:0] == 1'b1) ? select_ln392_4_fu_729_p3 : p_Val2_5_fu_707_p2);

assign rhs_6_fu_894_p3 = ((or_ln348_2_fu_882_p2[0:0] == 1'b1) ? select_ln348_5_fu_888_p3 : select_ln396_1_reg_1518);

assign rhs_7_fu_953_p3 = ((p_Result_34_fu_945_p3[0:0] == 1'b1) ? 17'd131071 : add_ln902_fu_941_p2);

assign select_ln348_5_fu_888_p3 = ((xor_ln348_5_reg_1512[0:0] == 1'b1) ? 18'd131071 : p_Val2_7_reg_1497);

assign select_ln348_8_fu_1074_p3 = ((xor_ln348_1_fu_1058_p2[0:0] == 1'b1) ? 10'd511 : tmp_reg_1560);

assign select_ln348_fu_781_p3 = ((xor_ln348_3_fu_765_p2[0:0] == 1'b1) ? 18'd131071 : p_Val2_3_reg_1459);

assign select_ln392_1_fu_571_p3 = ((tmp_2_fu_563_p3[0:0] == 1'b1) ? 18'd131071 : 18'd131072);

assign select_ln392_2_fu_609_p3 = ((tmp_4_fu_601_p3[0:0] == 1'b1) ? 18'd131071 : 18'd131072);

assign select_ln392_3_fu_691_p3 = ((tmp_8_fu_683_p3[0:0] == 1'b1) ? 18'd131071 : 18'd131072);

assign select_ln392_4_fu_729_p3 = ((tmp_10_fu_721_p3[0:0] == 1'b1) ? 18'd131071 : 18'd131072);

assign select_ln392_fu_975_p3 = ((overflow_fu_966_p2[0:0] == 1'b1) ? 18'd131071 : 18'd131072);

assign select_ln396_1_fu_853_p3 = ((underflow_2_fu_841_p2[0:0] == 1'b1) ? 18'd131072 : p_Val2_7_fu_815_p2);

assign select_ln396_2_fu_1081_p3 = ((underflow_fu_1053_p2[0:0] == 1'b1) ? 10'd512 : tmp_reg_1560);

assign select_ln396_fu_788_p3 = ((underflow_1_fu_760_p2[0:0] == 1'b1) ? 18'd131072 : p_Val2_3_reg_1459);

assign sext_ln1319_fu_1100_p1 = $signed(inv_exp_sum_V_reg_1576);

assign sext_ln251_1_fu_385_p1 = $signed(p_Result_1_reg_1290);

assign sext_ln251_2_fu_413_p1 = $signed(p_Result_2_reg_1305);

assign sext_ln251_3_fu_421_p1 = $signed(p_Result_3_reg_1310);

assign sext_ln251_4_fu_449_p1 = $signed(p_Result_4_reg_1337);

assign sext_ln251_5_fu_457_p1 = $signed(p_Result_5_reg_1342);

assign sext_ln251_6_fu_485_p1 = $signed(p_Result_6_reg_1369);

assign sext_ln251_7_fu_493_p1 = $signed(p_Result_7_reg_1374);

assign sext_ln251_8_fu_521_p1 = $signed(p_Result_8_reg_1401);

assign sext_ln251_9_fu_529_p1 = $signed(p_Result_9_reg_1406);

assign sext_ln251_fu_377_p1 = $signed(p_Result_s_reg_1285);

assign sext_ln859_1_fu_904_p1 = rhs_6_fu_894_p3;

assign sext_ln859_2_fu_993_p1 = lhs_7_fu_983_p3;

assign sext_ln859_3_fu_625_p1 = lhs_2_reg_1433;

assign sext_ln859_4_fu_628_p1 = rhs_2_reg_1439;

assign sext_ln859_5_fu_803_p1 = lhs_5_reg_1479;

assign sext_ln859_6_fu_806_p1 = rhs_5_reg_1485;

assign sext_ln859_fu_901_p1 = lhs_6_reg_1491;

assign tmp_10_fu_721_p3 = p_Val2_5_fu_707_p2[32'd17];

assign tmp_2_fu_563_p3 = p_Val2_s_fu_549_p2[32'd17];

assign tmp_4_fu_601_p3 = p_Val2_1_fu_587_p2[32'd17];

assign tmp_8_fu_683_p3 = p_Val2_4_fu_669_p2[32'd17];

assign underflow_1_fu_760_p2 = (xor_ln942_1_fu_755_p2 & p_Result_26_reg_1465);

assign underflow_2_fu_841_p2 = (xor_ln942_2_fu_835_p2 & p_Result_30_fu_819_p3);

assign underflow_fu_1053_p2 = (xor_ln942_fu_1048_p2 & p_Result_35_reg_1546);

assign xor_ln348_1_fu_1058_p2 = (p_Result_36_reg_1553 ^ p_Result_35_reg_1546);

assign xor_ln348_2_fu_1062_p2 = (xor_ln348_1_fu_1058_p2 ^ 1'd1);

assign xor_ln348_3_fu_765_p2 = (p_Result_27_reg_1472 ^ p_Result_26_reg_1465);

assign xor_ln348_4_fu_769_p2 = (xor_ln348_3_fu_765_p2 ^ 1'd1);

assign xor_ln348_5_fu_847_p2 = (p_Result_31_fu_827_p3 ^ p_Result_30_fu_819_p3);

assign xor_ln348_6_fu_877_p2 = (xor_ln348_5_reg_1512 ^ 1'd1);

assign xor_ln348_fu_971_p2 = (p_Result_33_reg_1534 ^ p_Result_32_reg_1528);

assign xor_ln941_1_fu_1038_p2 = (p_Result_35_reg_1546 ^ 1'd1);

assign xor_ln941_2_fu_745_p2 = (p_Result_26_reg_1465 ^ 1'd1);

assign xor_ln941_3_fu_867_p2 = (p_Result_30_reg_1502 ^ 1'd1);

assign xor_ln941_fu_961_p2 = (p_Result_32_reg_1528 ^ 1'd1);

assign xor_ln942_1_fu_755_p2 = (p_Result_27_reg_1472 ^ 1'd1);

assign xor_ln942_2_fu_835_p2 = (p_Result_31_fu_827_p3 ^ 1'd1);

assign xor_ln942_fu_1048_p2 = (p_Result_36_reg_1553 ^ 1'd1);

assign zext_ln251_1_fu_388_p1 = $unsigned(sext_ln251_1_fu_385_p1);

assign zext_ln251_2_fu_416_p1 = $unsigned(sext_ln251_2_fu_413_p1);

assign zext_ln251_3_fu_424_p1 = $unsigned(sext_ln251_3_fu_421_p1);

assign zext_ln251_4_fu_452_p1 = $unsigned(sext_ln251_4_fu_449_p1);

assign zext_ln251_5_fu_460_p1 = $unsigned(sext_ln251_5_fu_457_p1);

assign zext_ln251_6_fu_488_p1 = $unsigned(sext_ln251_6_fu_485_p1);

assign zext_ln251_7_fu_496_p1 = $unsigned(sext_ln251_7_fu_493_p1);

assign zext_ln251_8_fu_524_p1 = $unsigned(sext_ln251_8_fu_521_p1);

assign zext_ln251_9_fu_532_p1 = $unsigned(sext_ln251_9_fu_529_p1);

assign zext_ln251_fu_380_p1 = $unsigned(sext_ln251_fu_377_p1);

assign zext_ln259_fu_1096_p1 = p_Result_23_reg_1566;

assign zext_ln53_1_fu_540_p1 = exp_res_V_11_reg_1347;

assign zext_ln53_2_fu_543_p1 = exp_res_V_10_reg_1321;

assign zext_ln53_3_fu_546_p1 = exp_res_V_reg_1315;

assign zext_ln53_4_fu_657_p1 = exp_res_V_16_reg_1417;

assign zext_ln53_5_fu_660_p1 = exp_res_V_15_reg_1411;

assign zext_ln53_6_fu_663_p1 = exp_res_V_14_reg_1385;

assign zext_ln53_7_fu_666_p1 = exp_res_V_13_reg_1379;

assign zext_ln53_fu_537_p1 = exp_res_V_12_reg_1353;

assign zext_ln859_1_fu_997_p1 = rhs_7_reg_1540;

assign zext_ln859_fu_990_p1 = rhs_7_reg_1540;

endmodule //myproject_softmax_latency_ap_fixed_ap_fixed_softmax_config7_s
