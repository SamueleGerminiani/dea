// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.1 (64-bit)
// Version: 2022.1.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module myproject_softmax_latency_ap_fixed_ap_fixed_softmax_config7_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        layer7_out_address0,
        layer7_out_ce0,
        layer7_out_we0,
        layer7_out_d0,
        layer7_out_address1,
        layer7_out_ce1,
        layer7_out_we1,
        layer7_out_d1
);

parameter    ap_ST_fsm_pp0_stage0 = 5'd1;
parameter    ap_ST_fsm_pp0_stage1 = 5'd2;
parameter    ap_ST_fsm_pp0_stage2 = 5'd4;
parameter    ap_ST_fsm_pp0_stage3 = 5'd8;
parameter    ap_ST_fsm_pp0_stage4 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [13:0] p_read;
input  [13:0] p_read1;
input  [13:0] p_read2;
input  [13:0] p_read3;
input  [13:0] p_read4;
input  [13:0] p_read5;
input  [13:0] p_read6;
input  [13:0] p_read7;
input  [13:0] p_read8;
input  [13:0] p_read9;
output  [3:0] layer7_out_address0;
output   layer7_out_ce0;
output   layer7_out_we0;
output  [15:0] layer7_out_d0;
output  [3:0] layer7_out_address1;
output   layer7_out_ce1;
output   layer7_out_we1;
output  [15:0] layer7_out_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] layer7_out_address0;
reg layer7_out_ce0;
reg layer7_out_we0;
reg[15:0] layer7_out_d0;
reg[3:0] layer7_out_address1;
reg layer7_out_ce1;
reg layer7_out_we1;
reg[15:0] layer7_out_d1;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state10_pp0_stage4_iter1;
wire    ap_block_state15_pp0_stage4_iter2;
wire    ap_block_pp0_stage4_subdone;
reg   [9:0] exp_table_address0;
reg    exp_table_ce0;
wire   [16:0] exp_table_q0;
reg   [9:0] exp_table_address1;
reg    exp_table_ce1;
wire   [16:0] exp_table_q1;
wire   [9:0] invert_table_address0;
reg    invert_table_ce0;
wire   [17:0] invert_table_q0;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state11_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [16:0] exp_res_V_reg_1353;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_state12_pp0_stage1_iter2;
wire    ap_block_pp0_stage1_11001;
reg   [16:0] exp_res_V_reg_1353_pp0_iter1_reg;
reg   [16:0] exp_res_V_10_reg_1359;
reg   [16:0] exp_res_V_10_reg_1359_pp0_iter1_reg;
reg   [16:0] exp_res_V_11_reg_1375;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state8_pp0_stage2_iter1;
wire    ap_block_state13_pp0_stage2_iter2;
wire    ap_block_pp0_stage2_11001;
reg   [16:0] exp_res_V_11_reg_1375_pp0_iter1_reg;
reg   [16:0] exp_res_V_12_reg_1381;
reg   [16:0] exp_res_V_12_reg_1381_pp0_iter1_reg;
reg   [16:0] exp_res_V_13_reg_1397;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state9_pp0_stage3_iter1;
wire    ap_block_state14_pp0_stage3_iter2;
wire    ap_block_pp0_stage3_11001;
reg   [16:0] exp_res_V_13_reg_1397_pp0_iter1_reg;
reg   [16:0] exp_res_V_14_reg_1403;
reg   [16:0] exp_res_V_14_reg_1403_pp0_iter1_reg;
reg   [16:0] exp_res_V_15_reg_1419;
wire    ap_block_pp0_stage4_11001;
reg   [16:0] exp_res_V_15_reg_1419_pp0_iter1_reg;
reg   [16:0] exp_res_V_16_reg_1425;
reg   [16:0] exp_res_V_16_reg_1425_pp0_iter1_reg;
reg   [16:0] exp_res_V_17_reg_1441;
reg   [16:0] exp_res_V_17_reg_1441_pp0_iter2_reg;
reg   [16:0] exp_res_V_18_reg_1446;
reg   [16:0] exp_res_V_18_reg_1446_pp0_iter2_reg;
wire   [17:0] p_Val2_9_fu_949_p2;
reg   [17:0] p_Val2_9_reg_1451;
reg   [0:0] p_Result_32_reg_1456;
reg   [0:0] p_Result_33_reg_1462;
wire   [16:0] rhs_7_fu_991_p3;
reg   [16:0] rhs_7_reg_1468;
wire  signed [27:0] sext_ln1319_fu_1147_p1;
reg  signed [27:0] sext_ln1319_reg_1479;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln251_fu_371_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln251_1_fu_390_p1;
wire   [63:0] zext_ln251_2_fu_409_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln251_3_fu_428_p1;
wire   [63:0] zext_ln251_4_fu_447_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln251_5_fu_466_p1;
wire   [63:0] zext_ln251_6_fu_485_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln251_7_fu_504_p1;
wire   [63:0] zext_ln251_8_fu_523_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln251_9_fu_542_p1;
wire   [63:0] zext_ln259_fu_1142_p1;
wire   [7:0] p_Result_s_fu_357_p4;
wire  signed [9:0] sext_ln251_fu_367_p1;
wire   [7:0] p_Result_1_fu_376_p4;
wire  signed [9:0] sext_ln251_1_fu_386_p1;
wire   [7:0] p_Result_2_fu_395_p4;
wire  signed [9:0] sext_ln251_2_fu_405_p1;
wire   [7:0] p_Result_3_fu_414_p4;
wire  signed [9:0] sext_ln251_3_fu_424_p1;
wire   [7:0] p_Result_4_fu_433_p4;
wire  signed [9:0] sext_ln251_4_fu_443_p1;
wire   [7:0] p_Result_5_fu_452_p4;
wire  signed [9:0] sext_ln251_5_fu_462_p1;
wire   [7:0] p_Result_6_fu_471_p4;
wire  signed [9:0] sext_ln251_6_fu_481_p1;
wire   [7:0] p_Result_7_fu_490_p4;
wire  signed [9:0] sext_ln251_7_fu_500_p1;
wire   [7:0] p_Result_8_fu_509_p4;
wire  signed [9:0] sext_ln251_8_fu_519_p1;
wire   [7:0] p_Result_9_fu_528_p4;
wire  signed [9:0] sext_ln251_9_fu_538_p1;
wire   [17:0] zext_ln53_2_fu_561_p1;
wire   [17:0] zext_ln53_3_fu_564_p1;
wire   [17:0] p_Val2_s_fu_567_p2;
wire   [0:0] tmp_2_fu_581_p3;
wire   [0:0] p_Result_24_fu_573_p3;
wire   [17:0] select_ln392_1_fu_589_p3;
wire   [17:0] zext_ln53_fu_555_p1;
wire   [17:0] zext_ln53_1_fu_558_p1;
wire   [17:0] p_Val2_1_fu_605_p2;
wire   [0:0] tmp_4_fu_619_p3;
wire   [0:0] p_Result_25_fu_611_p3;
wire   [17:0] select_ln392_2_fu_627_p3;
wire  signed [17:0] lhs_2_fu_597_p3;
wire  signed [17:0] rhs_2_fu_635_p3;
wire  signed [18:0] sext_ln859_4_fu_647_p1;
wire  signed [18:0] sext_ln859_3_fu_643_p1;
wire   [18:0] ret_V_fu_651_p2;
wire   [17:0] p_Val2_3_fu_657_p2;
wire   [0:0] p_Result_26_fu_663_p3;
wire   [0:0] p_Result_27_fu_671_p3;
wire   [0:0] xor_ln941_2_fu_679_p2;
wire   [0:0] xor_ln942_1_fu_691_p2;
wire   [0:0] xor_ln348_3_fu_703_p2;
wire   [0:0] overflow_3_fu_685_p2;
wire   [0:0] xor_ln348_4_fu_709_p2;
wire   [0:0] underflow_1_fu_697_p2;
wire   [0:0] or_ln348_1_fu_715_p2;
wire   [17:0] select_ln348_fu_721_p3;
wire   [17:0] select_ln396_fu_729_p3;
wire   [17:0] zext_ln53_6_fu_751_p1;
wire   [17:0] zext_ln53_7_fu_754_p1;
wire   [17:0] p_Val2_4_fu_757_p2;
wire   [0:0] tmp_8_fu_771_p3;
wire   [0:0] p_Result_28_fu_763_p3;
wire   [17:0] select_ln392_3_fu_779_p3;
wire   [17:0] zext_ln53_4_fu_745_p1;
wire   [17:0] zext_ln53_5_fu_748_p1;
wire   [17:0] p_Val2_5_fu_795_p2;
wire   [0:0] tmp_10_fu_809_p3;
wire   [0:0] p_Result_29_fu_801_p3;
wire   [17:0] select_ln392_4_fu_817_p3;
wire  signed [17:0] lhs_5_fu_787_p3;
wire  signed [17:0] rhs_5_fu_825_p3;
wire  signed [18:0] sext_ln859_6_fu_837_p1;
wire  signed [18:0] sext_ln859_5_fu_833_p1;
wire   [18:0] ret_V_1_fu_841_p2;
wire   [17:0] p_Val2_7_fu_847_p2;
wire   [0:0] p_Result_30_fu_853_p3;
wire   [0:0] p_Result_31_fu_861_p3;
wire   [0:0] xor_ln941_3_fu_869_p2;
wire   [0:0] xor_ln942_2_fu_881_p2;
wire   [0:0] xor_ln348_5_fu_893_p2;
wire   [0:0] overflow_6_fu_875_p2;
wire   [0:0] xor_ln348_6_fu_899_p2;
wire   [0:0] underflow_2_fu_887_p2;
wire   [0:0] or_ln348_2_fu_905_p2;
wire   [17:0] select_ln348_5_fu_911_p3;
wire   [17:0] select_ln396_1_fu_919_p3;
wire  signed [17:0] lhs_6_fu_737_p3;
wire  signed [17:0] rhs_6_fu_927_p3;
wire  signed [18:0] sext_ln859_fu_935_p1;
wire  signed [18:0] sext_ln859_1_fu_939_p1;
wire   [18:0] ret_V_2_fu_943_p2;
wire   [17:0] exp_res_V_9_cast2_fu_551_p1;
wire   [17:0] exp_res_V_8_cast1_fu_547_p1;
wire   [17:0] p_Val2_10_fu_971_p2;
wire   [0:0] p_Result_34_fu_983_p3;
wire   [16:0] add_ln902_fu_977_p2;
wire   [0:0] xor_ln941_fu_999_p2;
wire   [0:0] overflow_fu_1004_p2;
wire   [0:0] xor_ln348_fu_1009_p2;
wire   [17:0] select_ln392_fu_1013_p3;
wire  signed [17:0] lhs_7_fu_1021_p3;
wire  signed [18:0] sext_ln859_2_fu_1031_p1;
wire   [18:0] zext_ln859_1_fu_1035_p1;
wire   [17:0] zext_ln859_fu_1028_p1;
wire   [18:0] ret_V_3_fu_1038_p2;
wire   [17:0] p_Val2_12_fu_1044_p2;
wire   [0:0] p_Result_35_fu_1050_p3;
wire   [0:0] p_Result_36_fu_1058_p3;
wire   [0:0] xor_ln941_1_fu_1066_p2;
wire   [0:0] xor_ln942_fu_1078_p2;
wire   [0:0] xor_ln348_1_fu_1090_p2;
wire   [0:0] overflow_8_fu_1072_p2;
wire   [0:0] xor_ln348_2_fu_1096_p2;
wire   [9:0] tmp_fu_1108_p4;
wire   [0:0] underflow_fu_1084_p2;
wire   [0:0] or_ln348_fu_1102_p2;
wire   [9:0] select_ln348_8_fu_1118_p3;
wire   [9:0] select_ln396_2_fu_1126_p3;
wire   [9:0] p_Result_23_fu_1134_p3;
wire  signed [27:0] grp_fu_1281_p2;
wire  signed [27:0] grp_fu_1288_p2;
wire  signed [27:0] grp_fu_1295_p2;
wire  signed [27:0] grp_fu_1301_p2;
wire  signed [27:0] grp_fu_1307_p2;
wire  signed [27:0] grp_fu_1313_p2;
wire  signed [27:0] grp_fu_1319_p2;
wire  signed [27:0] grp_fu_1325_p2;
wire  signed [27:0] grp_fu_1331_p2;
wire  signed [27:0] grp_fu_1337_p2;
wire  signed [17:0] grp_fu_1281_p0;
wire   [16:0] grp_fu_1281_p1;
wire  signed [17:0] grp_fu_1288_p0;
wire   [16:0] grp_fu_1288_p1;
wire  signed [17:0] grp_fu_1295_p0;
wire   [16:0] grp_fu_1295_p1;
wire  signed [17:0] grp_fu_1301_p0;
wire   [16:0] grp_fu_1301_p1;
wire  signed [17:0] grp_fu_1307_p0;
wire   [16:0] grp_fu_1307_p1;
wire  signed [17:0] grp_fu_1313_p0;
wire   [16:0] grp_fu_1313_p1;
wire  signed [17:0] grp_fu_1319_p0;
wire   [16:0] grp_fu_1319_p1;
wire  signed [17:0] grp_fu_1325_p0;
wire   [16:0] grp_fu_1325_p1;
wire  signed [17:0] grp_fu_1331_p0;
wire   [16:0] grp_fu_1331_p1;
wire  signed [17:0] grp_fu_1337_p0;
wire   [16:0] grp_fu_1337_p1;
reg    grp_fu_1281_ce;
reg    grp_fu_1288_ce;
reg    grp_fu_1295_ce;
reg    grp_fu_1301_ce;
reg    grp_fu_1307_ce;
reg    grp_fu_1313_ce;
reg    grp_fu_1319_ce;
reg    grp_fu_1325_ce;
reg    grp_fu_1331_ce;
reg    grp_fu_1337_ce;
reg   [4:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to2;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [27:0] grp_fu_1281_p10;
wire   [27:0] grp_fu_1288_p10;
wire   [27:0] grp_fu_1295_p10;
wire   [27:0] grp_fu_1301_p10;
wire   [27:0] grp_fu_1307_p10;
wire   [27:0] grp_fu_1313_p10;
wire   [27:0] grp_fu_1319_p10;
wire   [27:0] grp_fu_1325_p10;
wire   [27:0] grp_fu_1331_p10;
wire   [27:0] grp_fu_1337_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
end

myproject_softmax_latency_ap_fixed_ap_fixed_softmax_config7_s_exp_tfYi #(
    .DataWidth( 17 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
exp_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_table_address0),
    .ce0(exp_table_ce0),
    .q0(exp_table_q0),
    .address1(exp_table_address1),
    .ce1(exp_table_ce1),
    .q1(exp_table_q1)
);

myproject_softmax_latency_ap_fixed_ap_fixed_softmax_config7_s_inverg8j #(
    .DataWidth( 18 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
invert_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(invert_table_address0),
    .ce0(invert_table_ce0),
    .q0(invert_table_q0)
);

myproject_mul_mul_18s_17ns_28_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 28 ))
mul_mul_18s_17ns_28_4_1_U118(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1281_p0),
    .din1(grp_fu_1281_p1),
    .ce(grp_fu_1281_ce),
    .dout(grp_fu_1281_p2)
);

myproject_mul_mul_18s_17ns_28_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 28 ))
mul_mul_18s_17ns_28_4_1_U119(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1288_p0),
    .din1(grp_fu_1288_p1),
    .ce(grp_fu_1288_ce),
    .dout(grp_fu_1288_p2)
);

myproject_mul_mul_18s_17ns_28_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 28 ))
mul_mul_18s_17ns_28_4_1_U120(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1295_p0),
    .din1(grp_fu_1295_p1),
    .ce(grp_fu_1295_ce),
    .dout(grp_fu_1295_p2)
);

myproject_mul_mul_18s_17ns_28_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 28 ))
mul_mul_18s_17ns_28_4_1_U121(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1301_p0),
    .din1(grp_fu_1301_p1),
    .ce(grp_fu_1301_ce),
    .dout(grp_fu_1301_p2)
);

myproject_mul_mul_18s_17ns_28_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 28 ))
mul_mul_18s_17ns_28_4_1_U122(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1307_p0),
    .din1(grp_fu_1307_p1),
    .ce(grp_fu_1307_ce),
    .dout(grp_fu_1307_p2)
);

myproject_mul_mul_18s_17ns_28_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 28 ))
mul_mul_18s_17ns_28_4_1_U123(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1313_p0),
    .din1(grp_fu_1313_p1),
    .ce(grp_fu_1313_ce),
    .dout(grp_fu_1313_p2)
);

myproject_mul_mul_18s_17ns_28_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 28 ))
mul_mul_18s_17ns_28_4_1_U124(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1319_p0),
    .din1(grp_fu_1319_p1),
    .ce(grp_fu_1319_ce),
    .dout(grp_fu_1319_p2)
);

myproject_mul_mul_18s_17ns_28_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 28 ))
mul_mul_18s_17ns_28_4_1_U125(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1325_p0),
    .din1(grp_fu_1325_p1),
    .ce(grp_fu_1325_ce),
    .dout(grp_fu_1325_p2)
);

myproject_mul_mul_18s_17ns_28_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 28 ))
mul_mul_18s_17ns_28_4_1_U126(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1331_p0),
    .din1(grp_fu_1331_p1),
    .ce(grp_fu_1331_ce),
    .dout(grp_fu_1331_p2)
);

myproject_mul_mul_18s_17ns_28_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 28 ))
mul_mul_18s_17ns_28_4_1_U127(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1337_p0),
    .din1(grp_fu_1337_p1),
    .ce(grp_fu_1337_ce),
    .dout(grp_fu_1337_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        exp_res_V_10_reg_1359 <= exp_table_q0;
        exp_res_V_reg_1353 <= exp_table_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        exp_res_V_10_reg_1359_pp0_iter1_reg <= exp_res_V_10_reg_1359;
        exp_res_V_reg_1353_pp0_iter1_reg <= exp_res_V_reg_1353;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        exp_res_V_11_reg_1375 <= exp_table_q1;
        exp_res_V_12_reg_1381 <= exp_table_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        exp_res_V_11_reg_1375_pp0_iter1_reg <= exp_res_V_11_reg_1375;
        exp_res_V_12_reg_1381_pp0_iter1_reg <= exp_res_V_12_reg_1381;
        sext_ln1319_reg_1479 <= sext_ln1319_fu_1147_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        exp_res_V_13_reg_1397 <= exp_table_q1;
        exp_res_V_14_reg_1403 <= exp_table_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        exp_res_V_13_reg_1397_pp0_iter1_reg <= exp_res_V_13_reg_1397;
        exp_res_V_14_reg_1403_pp0_iter1_reg <= exp_res_V_14_reg_1403;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        exp_res_V_15_reg_1419 <= exp_table_q1;
        exp_res_V_16_reg_1425 <= exp_table_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        exp_res_V_15_reg_1419_pp0_iter1_reg <= exp_res_V_15_reg_1419;
        exp_res_V_16_reg_1425_pp0_iter1_reg <= exp_res_V_16_reg_1425;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_res_V_17_reg_1441 <= exp_table_q1;
        exp_res_V_18_reg_1446 <= exp_table_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_res_V_17_reg_1441_pp0_iter2_reg <= exp_res_V_17_reg_1441;
        exp_res_V_18_reg_1446_pp0_iter2_reg <= exp_res_V_18_reg_1446;
        p_Result_32_reg_1456 <= ret_V_2_fu_943_p2[32'd18];
        p_Result_33_reg_1462 <= p_Val2_9_fu_949_p2[32'd17];
        p_Val2_9_reg_1451 <= p_Val2_9_fu_949_p2;
        rhs_7_reg_1468 <= rhs_7_fu_991_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to2 = 1'b1;
    end else begin
        ap_idle_pp0_1to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_idle_pp0_0to1 == 1'b1) & (ap_start == 1'b0))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            exp_table_address0 = zext_ln251_9_fu_542_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            exp_table_address0 = zext_ln251_7_fu_504_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            exp_table_address0 = zext_ln251_5_fu_466_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            exp_table_address0 = zext_ln251_3_fu_428_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            exp_table_address0 = zext_ln251_1_fu_390_p1;
        end else begin
            exp_table_address0 = 'bx;
        end
    end else begin
        exp_table_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            exp_table_address1 = zext_ln251_8_fu_523_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            exp_table_address1 = zext_ln251_6_fu_485_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            exp_table_address1 = zext_ln251_4_fu_447_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            exp_table_address1 = zext_ln251_2_fu_409_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            exp_table_address1 = zext_ln251_fu_371_p1;
        end else begin
            exp_table_address1 = 'bx;
        end
    end else begin
        exp_table_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        exp_table_ce0 = 1'b1;
    end else begin
        exp_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        exp_table_ce1 = 1'b1;
    end else begin
        exp_table_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_1281_ce = 1'b1;
    end else begin
        grp_fu_1281_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_1288_ce = 1'b1;
    end else begin
        grp_fu_1288_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_1295_ce = 1'b1;
    end else begin
        grp_fu_1295_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_1301_ce = 1'b1;
    end else begin
        grp_fu_1301_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_1307_ce = 1'b1;
    end else begin
        grp_fu_1307_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_1313_ce = 1'b1;
    end else begin
        grp_fu_1313_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_1319_ce = 1'b1;
    end else begin
        grp_fu_1319_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_1325_ce = 1'b1;
    end else begin
        grp_fu_1325_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_1331_ce = 1'b1;
    end else begin
        grp_fu_1331_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_1337_ce = 1'b1;
    end else begin
        grp_fu_1337_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        invert_table_ce0 = 1'b1;
    end else begin
        invert_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            layer7_out_address0 = 64'd9;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            layer7_out_address0 = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            layer7_out_address0 = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            layer7_out_address0 = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            layer7_out_address0 = 64'd1;
        end else begin
            layer7_out_address0 = 'bx;
        end
    end else begin
        layer7_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            layer7_out_address1 = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            layer7_out_address1 = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            layer7_out_address1 = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            layer7_out_address1 = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            layer7_out_address1 = 64'd0;
        end else begin
            layer7_out_address1 = 'bx;
        end
    end else begin
        layer7_out_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        layer7_out_ce0 = 1'b1;
    end else begin
        layer7_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        layer7_out_ce1 = 1'b1;
    end else begin
        layer7_out_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            layer7_out_d0 = {{grp_fu_1337_p2[27:12]}};
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            layer7_out_d0 = {{grp_fu_1325_p2[27:12]}};
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            layer7_out_d0 = {{grp_fu_1313_p2[27:12]}};
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            layer7_out_d0 = {{grp_fu_1301_p2[27:12]}};
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            layer7_out_d0 = {{grp_fu_1288_p2[27:12]}};
        end else begin
            layer7_out_d0 = 'bx;
        end
    end else begin
        layer7_out_d0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            layer7_out_d1 = {{grp_fu_1331_p2[27:12]}};
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            layer7_out_d1 = {{grp_fu_1319_p2[27:12]}};
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            layer7_out_d1 = {{grp_fu_1307_p2[27:12]}};
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            layer7_out_d1 = {{grp_fu_1295_p2[27:12]}};
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            layer7_out_d1 = {{grp_fu_1281_p2[27:12]}};
        end else begin
            layer7_out_d1 = 'bx;
        end
    end else begin
        layer7_out_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        layer7_out_we0 = 1'b1;
    end else begin
        layer7_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        layer7_out_we1 = 1'b1;
    end else begin
        layer7_out_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_idle_pp0_1to2 == 1'b1) & (ap_start == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((((ap_reset_idle_pp0 == 1'b0) & (1'b0 == ap_block_pp0_stage4_subdone)) | ((ap_reset_idle_pp0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln902_fu_977_p2 = (exp_table_q0 + exp_table_q1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_done_reg == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_done_reg == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign exp_res_V_8_cast1_fu_547_p1 = exp_table_q1;

assign exp_res_V_9_cast2_fu_551_p1 = exp_table_q0;

assign grp_fu_1281_p0 = sext_ln1319_fu_1147_p1;

assign grp_fu_1281_p1 = grp_fu_1281_p10;

assign grp_fu_1281_p10 = exp_res_V_reg_1353_pp0_iter1_reg;

assign grp_fu_1288_p0 = sext_ln1319_fu_1147_p1;

assign grp_fu_1288_p1 = grp_fu_1288_p10;

assign grp_fu_1288_p10 = exp_res_V_10_reg_1359_pp0_iter1_reg;

assign grp_fu_1295_p0 = sext_ln1319_reg_1479;

assign grp_fu_1295_p1 = grp_fu_1295_p10;

assign grp_fu_1295_p10 = exp_res_V_11_reg_1375_pp0_iter1_reg;

assign grp_fu_1301_p0 = sext_ln1319_reg_1479;

assign grp_fu_1301_p1 = grp_fu_1301_p10;

assign grp_fu_1301_p10 = exp_res_V_12_reg_1381_pp0_iter1_reg;

assign grp_fu_1307_p0 = sext_ln1319_reg_1479;

assign grp_fu_1307_p1 = grp_fu_1307_p10;

assign grp_fu_1307_p10 = exp_res_V_13_reg_1397_pp0_iter1_reg;

assign grp_fu_1313_p0 = sext_ln1319_reg_1479;

assign grp_fu_1313_p1 = grp_fu_1313_p10;

assign grp_fu_1313_p10 = exp_res_V_14_reg_1403_pp0_iter1_reg;

assign grp_fu_1319_p0 = sext_ln1319_reg_1479;

assign grp_fu_1319_p1 = grp_fu_1319_p10;

assign grp_fu_1319_p10 = exp_res_V_15_reg_1419_pp0_iter1_reg;

assign grp_fu_1325_p0 = sext_ln1319_reg_1479;

assign grp_fu_1325_p1 = grp_fu_1325_p10;

assign grp_fu_1325_p10 = exp_res_V_16_reg_1425_pp0_iter1_reg;

assign grp_fu_1331_p0 = sext_ln1319_reg_1479;

assign grp_fu_1331_p1 = grp_fu_1331_p10;

assign grp_fu_1331_p10 = exp_res_V_17_reg_1441_pp0_iter2_reg;

assign grp_fu_1337_p0 = sext_ln1319_reg_1479;

assign grp_fu_1337_p1 = grp_fu_1337_p10;

assign grp_fu_1337_p10 = exp_res_V_18_reg_1446_pp0_iter2_reg;

assign invert_table_address0 = zext_ln259_fu_1142_p1;

assign lhs_2_fu_597_p3 = ((p_Result_24_fu_573_p3[0:0] == 1'b1) ? select_ln392_1_fu_589_p3 : p_Val2_s_fu_567_p2);

assign lhs_5_fu_787_p3 = ((p_Result_28_fu_763_p3[0:0] == 1'b1) ? select_ln392_3_fu_779_p3 : p_Val2_4_fu_757_p2);

assign lhs_6_fu_737_p3 = ((or_ln348_1_fu_715_p2[0:0] == 1'b1) ? select_ln348_fu_721_p3 : select_ln396_fu_729_p3);

assign lhs_7_fu_1021_p3 = ((xor_ln348_fu_1009_p2[0:0] == 1'b1) ? select_ln392_fu_1013_p3 : p_Val2_9_reg_1451);

assign or_ln348_1_fu_715_p2 = (xor_ln348_4_fu_709_p2 | overflow_3_fu_685_p2);

assign or_ln348_2_fu_905_p2 = (xor_ln348_6_fu_899_p2 | overflow_6_fu_875_p2);

assign or_ln348_fu_1102_p2 = (xor_ln348_2_fu_1096_p2 | overflow_8_fu_1072_p2);

assign overflow_3_fu_685_p2 = (xor_ln941_2_fu_679_p2 & p_Result_27_fu_671_p3);

assign overflow_6_fu_875_p2 = (xor_ln941_3_fu_869_p2 & p_Result_31_fu_861_p3);

assign overflow_8_fu_1072_p2 = (xor_ln941_1_fu_1066_p2 & p_Result_36_fu_1058_p3);

assign overflow_fu_1004_p2 = (xor_ln941_fu_999_p2 & p_Result_33_reg_1462);

assign p_Result_1_fu_376_p4 = {{p_read1[13:6]}};

assign p_Result_23_fu_1134_p3 = ((or_ln348_fu_1102_p2[0:0] == 1'b1) ? select_ln348_8_fu_1118_p3 : select_ln396_2_fu_1126_p3);

assign p_Result_24_fu_573_p3 = p_Val2_s_fu_567_p2[32'd17];

assign p_Result_25_fu_611_p3 = p_Val2_1_fu_605_p2[32'd17];

assign p_Result_26_fu_663_p3 = ret_V_fu_651_p2[32'd18];

assign p_Result_27_fu_671_p3 = p_Val2_3_fu_657_p2[32'd17];

assign p_Result_28_fu_763_p3 = p_Val2_4_fu_757_p2[32'd17];

assign p_Result_29_fu_801_p3 = p_Val2_5_fu_795_p2[32'd17];

assign p_Result_2_fu_395_p4 = {{p_read2[13:6]}};

assign p_Result_30_fu_853_p3 = ret_V_1_fu_841_p2[32'd18];

assign p_Result_31_fu_861_p3 = p_Val2_7_fu_847_p2[32'd17];

assign p_Result_34_fu_983_p3 = p_Val2_10_fu_971_p2[32'd17];

assign p_Result_35_fu_1050_p3 = ret_V_3_fu_1038_p2[32'd18];

assign p_Result_36_fu_1058_p3 = p_Val2_12_fu_1044_p2[32'd17];

assign p_Result_3_fu_414_p4 = {{p_read3[13:6]}};

assign p_Result_4_fu_433_p4 = {{p_read4[13:6]}};

assign p_Result_5_fu_452_p4 = {{p_read5[13:6]}};

assign p_Result_6_fu_471_p4 = {{p_read6[13:6]}};

assign p_Result_7_fu_490_p4 = {{p_read7[13:6]}};

assign p_Result_8_fu_509_p4 = {{p_read8[13:6]}};

assign p_Result_9_fu_528_p4 = {{p_read9[13:6]}};

assign p_Result_s_fu_357_p4 = {{p_read[13:6]}};

assign p_Val2_10_fu_971_p2 = (exp_res_V_9_cast2_fu_551_p1 + exp_res_V_8_cast1_fu_547_p1);

assign p_Val2_12_fu_1044_p2 = ($signed(lhs_7_fu_1021_p3) + $signed(zext_ln859_fu_1028_p1));

assign p_Val2_1_fu_605_p2 = (zext_ln53_fu_555_p1 + zext_ln53_1_fu_558_p1);

assign p_Val2_3_fu_657_p2 = ($signed(rhs_2_fu_635_p3) + $signed(lhs_2_fu_597_p3));

assign p_Val2_4_fu_757_p2 = (zext_ln53_6_fu_751_p1 + zext_ln53_7_fu_754_p1);

assign p_Val2_5_fu_795_p2 = (zext_ln53_4_fu_745_p1 + zext_ln53_5_fu_748_p1);

assign p_Val2_7_fu_847_p2 = ($signed(rhs_5_fu_825_p3) + $signed(lhs_5_fu_787_p3));

assign p_Val2_9_fu_949_p2 = ($signed(lhs_6_fu_737_p3) + $signed(rhs_6_fu_927_p3));

assign p_Val2_s_fu_567_p2 = (zext_ln53_2_fu_561_p1 + zext_ln53_3_fu_564_p1);

assign ret_V_1_fu_841_p2 = ($signed(sext_ln859_6_fu_837_p1) + $signed(sext_ln859_5_fu_833_p1));

assign ret_V_2_fu_943_p2 = ($signed(sext_ln859_fu_935_p1) + $signed(sext_ln859_1_fu_939_p1));

assign ret_V_3_fu_1038_p2 = ($signed(sext_ln859_2_fu_1031_p1) + $signed(zext_ln859_1_fu_1035_p1));

assign ret_V_fu_651_p2 = ($signed(sext_ln859_4_fu_647_p1) + $signed(sext_ln859_3_fu_643_p1));

assign rhs_2_fu_635_p3 = ((p_Result_25_fu_611_p3[0:0] == 1'b1) ? select_ln392_2_fu_627_p3 : p_Val2_1_fu_605_p2);

assign rhs_5_fu_825_p3 = ((p_Result_29_fu_801_p3[0:0] == 1'b1) ? select_ln392_4_fu_817_p3 : p_Val2_5_fu_795_p2);

assign rhs_6_fu_927_p3 = ((or_ln348_2_fu_905_p2[0:0] == 1'b1) ? select_ln348_5_fu_911_p3 : select_ln396_1_fu_919_p3);

assign rhs_7_fu_991_p3 = ((p_Result_34_fu_983_p3[0:0] == 1'b1) ? 17'd131071 : add_ln902_fu_977_p2);

assign select_ln348_5_fu_911_p3 = ((xor_ln348_5_fu_893_p2[0:0] == 1'b1) ? 18'd131071 : p_Val2_7_fu_847_p2);

assign select_ln348_8_fu_1118_p3 = ((xor_ln348_1_fu_1090_p2[0:0] == 1'b1) ? 10'd511 : tmp_fu_1108_p4);

assign select_ln348_fu_721_p3 = ((xor_ln348_3_fu_703_p2[0:0] == 1'b1) ? 18'd131071 : p_Val2_3_fu_657_p2);

assign select_ln392_1_fu_589_p3 = ((tmp_2_fu_581_p3[0:0] == 1'b1) ? 18'd131071 : 18'd131072);

assign select_ln392_2_fu_627_p3 = ((tmp_4_fu_619_p3[0:0] == 1'b1) ? 18'd131071 : 18'd131072);

assign select_ln392_3_fu_779_p3 = ((tmp_8_fu_771_p3[0:0] == 1'b1) ? 18'd131071 : 18'd131072);

assign select_ln392_4_fu_817_p3 = ((tmp_10_fu_809_p3[0:0] == 1'b1) ? 18'd131071 : 18'd131072);

assign select_ln392_fu_1013_p3 = ((overflow_fu_1004_p2[0:0] == 1'b1) ? 18'd131071 : 18'd131072);

assign select_ln396_1_fu_919_p3 = ((underflow_2_fu_887_p2[0:0] == 1'b1) ? 18'd131072 : p_Val2_7_fu_847_p2);

assign select_ln396_2_fu_1126_p3 = ((underflow_fu_1084_p2[0:0] == 1'b1) ? 10'd512 : tmp_fu_1108_p4);

assign select_ln396_fu_729_p3 = ((underflow_1_fu_697_p2[0:0] == 1'b1) ? 18'd131072 : p_Val2_3_fu_657_p2);

assign sext_ln1319_fu_1147_p1 = $signed(invert_table_q0);

assign sext_ln251_1_fu_386_p1 = $signed(p_Result_1_fu_376_p4);

assign sext_ln251_2_fu_405_p1 = $signed(p_Result_2_fu_395_p4);

assign sext_ln251_3_fu_424_p1 = $signed(p_Result_3_fu_414_p4);

assign sext_ln251_4_fu_443_p1 = $signed(p_Result_4_fu_433_p4);

assign sext_ln251_5_fu_462_p1 = $signed(p_Result_5_fu_452_p4);

assign sext_ln251_6_fu_481_p1 = $signed(p_Result_6_fu_471_p4);

assign sext_ln251_7_fu_500_p1 = $signed(p_Result_7_fu_490_p4);

assign sext_ln251_8_fu_519_p1 = $signed(p_Result_8_fu_509_p4);

assign sext_ln251_9_fu_538_p1 = $signed(p_Result_9_fu_528_p4);

assign sext_ln251_fu_367_p1 = $signed(p_Result_s_fu_357_p4);

assign sext_ln859_1_fu_939_p1 = rhs_6_fu_927_p3;

assign sext_ln859_2_fu_1031_p1 = lhs_7_fu_1021_p3;

assign sext_ln859_3_fu_643_p1 = lhs_2_fu_597_p3;

assign sext_ln859_4_fu_647_p1 = rhs_2_fu_635_p3;

assign sext_ln859_5_fu_833_p1 = lhs_5_fu_787_p3;

assign sext_ln859_6_fu_837_p1 = rhs_5_fu_825_p3;

assign sext_ln859_fu_935_p1 = lhs_6_fu_737_p3;

assign tmp_10_fu_809_p3 = p_Val2_5_fu_795_p2[32'd17];

assign tmp_2_fu_581_p3 = p_Val2_s_fu_567_p2[32'd17];

assign tmp_4_fu_619_p3 = p_Val2_1_fu_605_p2[32'd17];

assign tmp_8_fu_771_p3 = p_Val2_4_fu_757_p2[32'd17];

assign tmp_fu_1108_p4 = {{p_Val2_12_fu_1044_p2[17:8]}};

assign underflow_1_fu_697_p2 = (xor_ln942_1_fu_691_p2 & p_Result_26_fu_663_p3);

assign underflow_2_fu_887_p2 = (xor_ln942_2_fu_881_p2 & p_Result_30_fu_853_p3);

assign underflow_fu_1084_p2 = (xor_ln942_fu_1078_p2 & p_Result_35_fu_1050_p3);

assign xor_ln348_1_fu_1090_p2 = (p_Result_36_fu_1058_p3 ^ p_Result_35_fu_1050_p3);

assign xor_ln348_2_fu_1096_p2 = (xor_ln348_1_fu_1090_p2 ^ 1'd1);

assign xor_ln348_3_fu_703_p2 = (p_Result_27_fu_671_p3 ^ p_Result_26_fu_663_p3);

assign xor_ln348_4_fu_709_p2 = (xor_ln348_3_fu_703_p2 ^ 1'd1);

assign xor_ln348_5_fu_893_p2 = (p_Result_31_fu_861_p3 ^ p_Result_30_fu_853_p3);

assign xor_ln348_6_fu_899_p2 = (xor_ln348_5_fu_893_p2 ^ 1'd1);

assign xor_ln348_fu_1009_p2 = (p_Result_33_reg_1462 ^ p_Result_32_reg_1456);

assign xor_ln941_1_fu_1066_p2 = (p_Result_35_fu_1050_p3 ^ 1'd1);

assign xor_ln941_2_fu_679_p2 = (p_Result_26_fu_663_p3 ^ 1'd1);

assign xor_ln941_3_fu_869_p2 = (p_Result_30_fu_853_p3 ^ 1'd1);

assign xor_ln941_fu_999_p2 = (p_Result_32_reg_1456 ^ 1'd1);

assign xor_ln942_1_fu_691_p2 = (p_Result_27_fu_671_p3 ^ 1'd1);

assign xor_ln942_2_fu_881_p2 = (p_Result_31_fu_861_p3 ^ 1'd1);

assign xor_ln942_fu_1078_p2 = (p_Result_36_fu_1058_p3 ^ 1'd1);

assign zext_ln251_1_fu_390_p1 = $unsigned(sext_ln251_1_fu_386_p1);

assign zext_ln251_2_fu_409_p1 = $unsigned(sext_ln251_2_fu_405_p1);

assign zext_ln251_3_fu_428_p1 = $unsigned(sext_ln251_3_fu_424_p1);

assign zext_ln251_4_fu_447_p1 = $unsigned(sext_ln251_4_fu_443_p1);

assign zext_ln251_5_fu_466_p1 = $unsigned(sext_ln251_5_fu_462_p1);

assign zext_ln251_6_fu_485_p1 = $unsigned(sext_ln251_6_fu_481_p1);

assign zext_ln251_7_fu_504_p1 = $unsigned(sext_ln251_7_fu_500_p1);

assign zext_ln251_8_fu_523_p1 = $unsigned(sext_ln251_8_fu_519_p1);

assign zext_ln251_9_fu_542_p1 = $unsigned(sext_ln251_9_fu_538_p1);

assign zext_ln251_fu_371_p1 = $unsigned(sext_ln251_fu_367_p1);

assign zext_ln259_fu_1142_p1 = p_Result_23_fu_1134_p3;

assign zext_ln53_1_fu_558_p1 = exp_res_V_11_reg_1375;

assign zext_ln53_2_fu_561_p1 = exp_res_V_10_reg_1359;

assign zext_ln53_3_fu_564_p1 = exp_res_V_reg_1353;

assign zext_ln53_4_fu_745_p1 = exp_res_V_16_reg_1425;

assign zext_ln53_5_fu_748_p1 = exp_res_V_15_reg_1419;

assign zext_ln53_6_fu_751_p1 = exp_res_V_14_reg_1403;

assign zext_ln53_7_fu_754_p1 = exp_res_V_13_reg_1397;

assign zext_ln53_fu_555_p1 = exp_res_V_12_reg_1381;

assign zext_ln859_1_fu_1035_p1 = rhs_7_reg_1468;

assign zext_ln859_fu_1028_p1 = rhs_7_reg_1468;

endmodule //myproject_softmax_latency_ap_fixed_ap_fixed_softmax_config7_s
